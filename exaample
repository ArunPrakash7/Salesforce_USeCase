<template>
    <lightning-card title="Product Selection" icon-name="standard:product">
        <div class="slds-p-around_medium">
            
            <template if:true={products}>
                <ul>
                    <template for:each={products} for:item="product">
                        <label key={product.Id}>
                            <input type="checkbox" value={selectedIndustries} onchange={handleProductSelection} >
                            {product.Name}<br>
                        </label>
                    </template>
                </ul>
                <lightning-button-group>
                    <lightning-button label="Filter" onclick={handleFilter}></lightning-button>
                </lightning-button-group>
            </template>
            
        </div>
    </lightning-card>


        <lightning-card title="Filtered Products" icon-name="standard:product">
        <div class="slds-p-around_medium">
            <template if:true={productsList}>
                <ul>
                    <template for:each={productsList} for:item="productLst">
                        <li key={productLst.Id}>{productLst.Name}</li>
                    </template>
                </ul>
            </template>
        </div>

    </lightning-card>
</template>


import { LightningElement, wire } from 'lwc';
import userIndustySt from '@salesforce/apex/userIndustyStory.userIndustySt';
import getProductsByIndustry from '@salesforce/apex/demoUseCase.getProductsByIndustry';

export default class UserIndustryStory extends LightningElement
{
    products;
    productsList;
    selectedIndustries = [];

    @wire(userIndustySt)
    wiredProducts({ error, data }) 
    {
        if (data) {
            this.products = data;
        } else if (error) {
            this.products = error;
        }
    }


    handleFilter() {
        getProductsByIndustry({ selectedIndustryIds: this.selectedIndustries })
            .then(result => {
                this.productsList = result;
            })
            .catch(error => {
                console.error('Error fetching products', error);
            });
    }

    handleProductSelection(event) {
        this.selectedIndustries = event.detail.value;
    }
}

