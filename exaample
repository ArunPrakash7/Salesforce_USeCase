import { LightningElement, wire } from 'lwc';
import getOpportunitiesToday from '@salesforce/apex/OpportunityCloseDate.getOpportunityClose';

const PAGE_SIZE = 10;

const columns = [
    { label: 'Opportunity Name', fieldName: 'Name', type: 'text' },
    { label: 'Close Date', fieldName: 'CloseDate', type: 'date' },
    { label: 'Amount', fieldName: 'Amount', type: 'currency' }
];

export default class OpportunityCloseDateDisplay extends LightningElement {
    opportunities = [];
    columns = columns;
    currentPage = 1;
    totalRecords = 0;

    @wire(getOpportunitiesToday)
    wiredOpportunities({ error, data }) {
        if (data) {
            this.totalRecords = data.length;
            this.allOpportunities = data;
            this.opportunities = this.paginateData();
        } else if (error) {
            console.error('Error retrieving opportunities:', error);
        }
    }

    get isFirstPage() {
        return this.currentPage === 1;
    }

    get isLastPage() {
        return this.currentPage * PAGE_SIZE >= this.totalRecords;
    }

    nextPage() {
        this.currentPage++;
        this.updateData();
    }

    previousPage() {
        this.currentPage--;
        this.updateData();
    }

    updateData() {
        this.opportunities = this.paginateData();
    }

    paginateData() {
        const startIndex = (this.currentPage - 1) * PAGE_SIZE;
        const endIndex = startIndex + PAGE_SIZE;
        return this.allOpportunities.slice(startIndex, endIndex);
    }
}
