@isTest
public class opportunitytaskTest {
    static testMethod void testUpdatedelegated() {
        // Create test data: Accounts with delegated flag set to true
        List<Account> testAccounts = new List<Account>();
        for(Integer i = 0; i < 5; i++) {
            Account acc = new Account(Name = 'Test Account ' + i, isdelegated__c = true);
            testAccounts.add(acc);
        }
        insert testAccounts;
        
        // Create test data: Opportunities associated with the test accounts
        List<Opportunity> testOpps = new List<Opportunity>();
        for(Integer i = 0; i < 5; i++) {
            Opportunity opp = new Opportunity(Name = 'Test Opportunity ' + i, StageName = 'Prospecting', AccountId = testAccounts[i].Id, Type = 'New Business');
            testOpps.add(opp);
        }
        insert testOpps;
        
        // Call the method under test
        Test.startTest();
        opportunitytask.updatedelegated(testOpps);
        Test.stopTest();
        
        // Verify that delegated opportunities have been properly validated
        for(Opportunity opp : testOpps) {
            if(opp.AccountId != null && testAccounts[0].Id == opp.AccountId) {
                // Delegated account with non-delegated opportunity should throw an error
                System.assertEquals('Delegated account should have delegated opportunities', opp.getErrors()[0].getMessage());
            } else {
                // Other opportunities should not throw an error
                System.assert(opp.getErrors().size() == 0);
            }
        }
    }
}
